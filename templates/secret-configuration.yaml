---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "lemmy.fullname" . }}
  labels:
    {{- include "lemmy.labels" . | nindent 4 }}
{{- $adminPassword := randAlphaNum 32 }}
{{- $pictrsApikey := randAlphaNum 64 }}

{{- $existing := (lookup "v1" "Secret" .Release.Namespace (include "lemmy.fullname" .)) -}}
{{- if and $existing $existing.data.admin_password }}
  {{- $adminPassword := b64dec $existing.data.admin_password }}
{{- end }}
{{- if and $existing $existing.data.pictrs_apikey }}
  {{- $pictrsApikey := b64dec $existing.data.pictrs_apikey }}
{{- end }}

{{- $config := dict
  "database"
    (dict
      "user" (include "lemmy.postgresql.username" .)
      "password" (include "lemmy.postgresql.password" .)
      "host" (include "lemmy.postgresql.host" .)
      "port" (include "lemmy.postgresql.port" . | int)
      "database" (include "lemmy.postgresql.database" .)
    )
  "pictrs"
    (dict
      "url" (printf "http://%s:%d" (include "lemmy.pictrsname" .) (int .Values.pictrs.service.port))
      "api_key" (.Values.pictrs.apikey | default $pictrsApikey)
    )
  "email"
    (dict
      "smtp_server" .Values.smtp.server
      "smtp_login" .Values.smtp.username
      "smtp_password" .Values.smtp.password
      "smtp_from_address" .Values.smtp.from
      "tls_type" .Values.smtp.tls
    )
  "setup"
    (dict
      "admin_username" (.Values.admin.username | default "lemmy")
      "admin_password" (.Values.admin.password | default $adminPassword)
      "admin_email" .Values.admin.email
      "site_name" .Values.config.siteName
    )
  "hostname" .Values.serverName
  "bind" "0.0.0.0"
  "port" 8536
  "tls_enabled" (.Values.config.tls | default true)
}}
data:
  admin_password: {{ $adminPassword | b64enc }}
  pictrs_apikey: {{ $pictrsApikey | b64enc }}
  config.hjson: {{ $config | toPrettyJson | b64enc }}
